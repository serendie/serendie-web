---
import Footer from "@/components/toppage/Footer.astro";
import "@/index.css";
import { styled } from "styled-system/jsx";
import { siteConfig } from "@/../siteConfig";
import { ThemeSelector } from "@/components/ThemeSelector";

const Container = styled("div", {
  base: {
    position: "relative",
    minH: "200vh",
    background: "#EFF2FC",
    zIndex: 1,
    overflow: "clip",
  },
});
const Wrapper = styled("div", {
  base: {
    // overflowX: "hidden",
    maxWidth: "100vw",
  },
});
const Header = styled("header", {
  base: {
    position: "fixed",
    top: 0,
    zIndex: 100,
    w: "100%",
    pt: "sd.system.dimension.spacing.extraLarge",
    pr: "sd.system.dimension.spacing.threeExtraLarge",
    pb: "sd.system.dimension.spacing.extraLarge",
    pl: "sd.system.dimension.spacing.threeExtraLarge",
    color: "sd.reference.color.scale.blue.900",
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    animation: `fadein 0.6s forwards`,
    animationDelay: "3s",
    opacity: 0,
  },
});

const H1 = styled("h1", {
  base: {
    textStyle: "sd.system.typography.title.large_expanded",
  },
});

const Menu = styled("div", {
  base: {
    display: "flex",
    alignItems: "center",
    fontWeight: "sd.reference.typography.fontWeight.bold",
    gap: "sd.system.dimension.spacing.extraLarge",
  },
});

const Link = styled("a", {
  base: {},
  variants: {
    active: {
      true: {
        borderBottom: "solid",
      },
    },
  },
});

const menuItems = [
  { href: "/about", text: "About" },
  { href: "/get-started", text: "Get Started" },
  { href: "/foundations/", text: "Foundations" },
  { href: "/components/", text: "Components" },
  { href: "/contribution/", text: "Contribution" },
];
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={siteConfig.siteDescription} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{siteConfig.siteName}</title>

    <script>
      const storedTheme = localStorage.getItem("panda-theme");
      if (storedTheme) {
        document.documentElement.setAttribute("data-panda-theme", storedTheme);
      }
    </script>
  </head>
  <body>
    <Header>
      <H1><a href="/">{siteConfig.siteName}</a></H1>
      <Menu>
        {
          menuItems.map((item) => (
            <Link
              active={
                // 前方一致で判定
                Astro.url.pathname.match(new RegExp(`^${item.href}`))
                  ? true
                  : false
              }
              href={item.href}
            >
              {item.text}
            </Link>
          ))
        }
        <ThemeSelector client:load />
      </Menu>
    </Header>

    <Wrapper>
      <Container>
        <slot />
      </Container>
    </Wrapper>

    <Footer />
  </body>
</html>
