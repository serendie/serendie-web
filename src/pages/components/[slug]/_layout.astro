---
import { styled } from "@serendie/ui/jsx";
import SiteLayout from "../../../layouts/Layout.astro";
import { css } from "@serendie/ui/css";

interface Props {
  title: string;
  componentName?: string;
  description?: string;
}

const { title, componentName, description } = Astro.props;

const ComponentName = styled("h2", {
  base: {
    textStyle: "sd.system.typography.title.medium_expanded",
    mb: "sd.system.dimension.spacing.medium",
  },
});

const Description = styled("p", {
  base: {
    textStyle: "sd.system.typography.body.small_expanded",
    mb: "sd.system.dimension.spacing.threeExtraLarge",
  },
});

const Container = styled("div", {
  base: {
    maxW: "769px",
  },
});

const basePath = `/components/${Astro.params.slug}`;

const paths = [
  {
    name: "概要",
    path: `${basePath}`,
  },
  {
    name: "ガイドライン",
    path: `${basePath}/guideline`,
  },
];
---

<SiteLayout title={title}>
  <Container>
    {componentName && <ComponentName>{componentName}</ComponentName>}
    {description && <Description>{description}</Description>}
    <div
      class={css({
        h: 44,
        display: "flex",
        alignItems: "stretch",
        borderBottomWidth: 1,
        borderBottomColor: "sd.system.color.component.onSurfaceVariant",
        mb: "sd.system.dimension.spacing.threeExtraLarge",
      })}
    >
      {
        paths.map((path) => (
          <a
            href={path.path}
            class={css({
              px: "sd.system.dimension.spacing.twoExtraLarge",
              pb: "sd.system.dimension.spacing.twoExtraSmall",
              "&:hover": {
                color: "sd.system.color.impression.primary",
              },
              borderBottomWidth: 2,
              borderBottomColor:
                Astro.url.pathname === path.path
                  ? "sd.system.color.impression.primary"
                  : "transparent",
            })}
          >
            {path.name}
          </a>
        ))
      }
    </div>
    <slot />
  </Container>
</SiteLayout>
