---
import Layout from "../layouts/Global.astro";

// Pre-render this page at build time
export const prerender = true;
---

<Layout title="API Example">
  <div class="api-example">
    <h1>Hono.js API Routes Example</h1>
    
    <div class="section">
      <h2>API Endpoints</h2>
      <p>The following API endpoints are available:</p>
      <ul>
        <li><code>/api/health</code> - Health check endpoint</li>
        <li><code>/api/version</code> - Get version information</li>
        <li><code>/api/components</code> - List all components</li>
        <li><code>/api/components/:id</code> - Get component by ID</li>
      </ul>
    </div>

    <div class="section">
      <h2>Test API Calls</h2>
      <div class="buttons">
        <button id="health-btn">Check Health</button>
        <button id="version-btn">Get Version</button>
        <button id="components-btn">List Components</button>
        <button id="component-btn">Get Button Component</button>
      </div>
      <pre id="result"></pre>
    </div>
  </div>
</Layout>

<style>
  .api-example {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

  .section {
    margin-bottom: 2rem;
  }

  h1 {
    font-size: 2rem;
    margin-bottom: 2rem;
  }

  h2 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  ul {
    list-style-type: disc;
    margin-left: 2rem;
  }

  code {
    background-color: #f5f5f5;
    padding: 0.2rem 0.4rem;
    border-radius: 3px;
    font-family: monospace;
  }

  .buttons {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  button {
    padding: 0.5rem 1rem;
    background-color: #0070f3;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  button:hover {
    background-color: #0051cc;
  }

  #result {
    background-color: #f5f5f5;
    padding: 1rem;
    border-radius: 4px;
    min-height: 100px;
    overflow-x: auto;
    white-space: pre-wrap;
  }
</style>

<script>
  import { api } from "../utils/api-client";

  const result = document.getElementById("result") as HTMLPreElement;
  
  const showResult = (data: any) => {
    result.textContent = JSON.stringify(data, null, 2);
  };

  const showError = (error: any) => {
    result.textContent = `Error: ${error.message}`;
  };

  document.getElementById("health-btn")?.addEventListener("click", async () => {
    try {
      const data = await api.getHealth();
      showResult(data);
    } catch (error) {
      showError(error);
    }
  });

  document.getElementById("version-btn")?.addEventListener("click", async () => {
    try {
      const data = await api.getVersion();
      showResult(data);
    } catch (error) {
      showError(error);
    }
  });

  document.getElementById("components-btn")?.addEventListener("click", async () => {
    try {
      const data = await api.getComponents();
      showResult(data);
    } catch (error) {
      showError(error);
    }
  });

  document.getElementById("component-btn")?.addEventListener("click", async () => {
    try {
      const data = await api.getComponent("button");
      showResult(data);
    } catch (error) {
      showError(error);
    }
  });
</script>